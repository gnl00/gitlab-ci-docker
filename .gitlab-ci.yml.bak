# docker in docker 模板
# .gitlab-ci.yml 相关参数：https://docs.gitlab.cn/jh/ci/yaml/

variables:
  DEFAULT_RUNNER: dind_runner_230
  DOCKER_REGISTRY: 127.0.0.1:5000
  DEPLOY_VERSION: "SNAPSHOT"
  DEPLOY_PORT: 8800:8800 # <expose>:<source>
  DEBUG_PORT: 5005:5005 # <expose>:<source>

default:
  before_script: # 会在每一个 job 脚本执行之前执行
    - echo "$CI_JOB_NAME 开始 $CI_JOB_STARTED_AT"
    - echo "$CI_JOB_URL"
    - echo "克隆 Git 仓库的 URL $CI_REPOSITORY_URL"
    - echo "runner 的描述 $CI_RUNNER_DESCRIPTION"
  after_script: # 会在每一个 job 脚本执行之后执行，包括失败的 job。
    - echo "Runner work for $CI_JOB_NAME done"

# 开发-测试-打包-部署
stages:
  - check
  - test
  - build
  - deploy

# 将某个 job 的产物缓存，提供给其他 job 使用
cache:
  untracked: true # 缓存 git 未追踪的产物
#  paths:
#    - node_module/

check-tags-job:
  stage: check
  only:
    - tags # 这个 job 只会在推送 tag 的时候执行
  script:
    - echo "tags check"
    - echo "提交标签名称:\ $CI_COMMIT_TAG" # $CI_COMMIT_TAG 仅在标签流水线中可用。
    - echo "提交标签消息:\ $CI_COMMIT_TAG_MESSAGE"
  tags:
    - $DEFAULT_RUNNER

check-branch-job:
  stage: check
  only:
    - dev
    - master
  script:
    - echo "branch check"
    - echo "提交分支名称:\ $CI_COMMIT_REF_NAME" # $CI_COMMIT_TAG 仅在标签流水线中可用。
    - echo "提交消息:\ $CI_COMMIT_MESSAGE"
  tags:
    - $DEFAULT_RUNNER

test-job:
  stage: test
  script:
    - echo "doing some test job"
  tags:
    - $DEFAULT_RUNNER

build-jar-job:
  image: maven:3.9.3-eclipse-temurin-17
  stage: build
  needs:
    - test-job
  only:
    - tags
  script:
    - export # 列出所有预定义的环境变量
    - echo "building jar ..."
    - mvn -v
    - cp public/config/settings.xml /usr/share/maven/conf
    - mvn clean package -Dmaven.test.skip=true
    - ls
  artifacts: # 将生成的产物传递给下一个 job 使用
    name: $CI_PROJECT_NAME
    untracked: true # 将所有 Git 未跟踪文件添加为产物
    paths:
      - target/*.jar
  tags:
    - $DEFAULT_RUNNER # 指定使用标有 dind_runner_203 的 runner 执行这个 job

build-image-job:
  image: docker:stable
  stage: build
  needs:
    - build-jar-job
  only:
    - tags
  script:
    - echo "building docker image ..."
    - ls target
    - docker info
    - docker build -t $CI_PROJECT_NAME:$CI_COMMIT_TAG .
    - echo "docker 镜像 $CI_PROJECT_NAME:$CI_COMMIT_TAG 打包完成，输出所有镜像："
    - docker images
    - echo "docker 镜像上传 docker 仓库..."
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    - docker push $DOCKER_REGISTRY/$CI_PROJECT_NAME:$CI_COMMIT_TAG
  tags:
    - $DEFAULT_RUNNER # 指定使用标有 dind_runner_203 的 runner 执行这个 job

deploy-job:
  image: docker:stable
  stage: deploy
  needs:
    - build-image-job
  only:
    - tags
  before_script:
    - docker info
    - docker images
  script:
    - echo "deploying product ..."
    - echo "项目 $CI_PROJECT_NAME:$CI_COMMIT_TAG 部署中..."
    - sh public/scripts/startup.sh $CI_PROJECT_NAME $CI_COMMIT_TAG $DEPLOY_PORT $DEBUG_PORT
  tags:
    - $DEFAULT_RUNNER
